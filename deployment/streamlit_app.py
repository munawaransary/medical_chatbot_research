"""
Streamlit demo application for Bengali Medical Chatbot.
"""

import sys
import streamlit as st
from pathlib import Path

# Add src to path
sys.path.append(str(Path(__file__).parent.parent / "src"))

from utils.logger import setup_logger

logger = setup_logger(__name__)

# Page configuration
st.set_page_config(
    page_title="BengaliMed Chatbot",
    page_icon="ЁЯПе",
    layout="wide",
    initial_sidebar_state="expanded"
)

def main():
    """Main Streamlit application."""
    
    # Title and description
    st.title("ЁЯПе BengaliMed: Bengali Medical Chatbot")
    st.markdown("""
    A culturally-aware medical chatbot for Bengali healthcare assistance.
    
    **тЪая╕П Disclaimer**: This is a research prototype. Always consult healthcare professionals for medical advice.
    """)
    
    # Sidebar
    with st.sidebar:
        st.header("Settings")
        
        # Language selection
        language = st.selectbox(
            "Select Language / ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
            ["Bengali (ржмрж╛ржВрж▓рж╛)", "English", "Mixed (ржорж┐рж╢рзНрж░)"]
        )
        
        # Specialization
        specialization = st.selectbox(
            "Medical Specialization",
            ["General Medicine", "Mental Health", "Pediatrics", "Women's Health"]
        )
        
        # Cultural sensitivity
        cultural_mode = st.checkbox("Cultural Sensitivity Mode", value=True)
        
        st.markdown("---")
        st.markdown("### About")
        st.markdown("""
        This chatbot is part of a research project to create 
        culturally-appropriate medical AI for Bengali speakers.
        """)
    
    # Main chat interface
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.header("Chat Interface")
        
        # Chat history
        if "messages" not in st.session_state:
            st.session_state.messages = []
        
        # Display chat messages
        for message in st.session_state.messages:
            with st.chat_message(message["role"]):
                st.markdown(message["content"])
        
        # Chat input
        if prompt := st.chat_input("ржЖржкржирж╛рж░ рж╕рзНржмрж╛рж╕рзНржерзНржп рж╕ржВржХрзНрж░рж╛ржирзНржд ржкрзНрж░рж╢рзНржи рж▓рж┐ржЦрзБржи... / Type your health question..."):
            # Add user message
            st.session_state.messages.append({"role": "user", "content": prompt})
            with st.chat_message("user"):
                st.markdown(prompt)
            
            # Generate response (placeholder)
            with st.chat_message("assistant"):
                with st.spinner("Thinking..."):
                    # TODO: Replace with actual model inference
                    response = generate_response(prompt, language, specialization, cultural_mode)
                    st.markdown(response)
            
            # Add assistant message
            st.session_state.messages.append({"role": "assistant", "content": response})
    
    with col2:
        st.header("Quick Actions")
        
        # Common questions
        st.subheader("Common Questions")
        common_questions = [
            "ржЬрзНржмрж░ рж╣рж▓рзЗ ржХрж┐ ржХрж░ржм?",
            "ржорж╛ржерж╛ржмрзНржпржерж╛рж░ ржХрж╛рж░ржг ржХрж┐?",
            "ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕рзЗрж░ рж▓ржХрзНрж╖ржг",
            "What are COVID symptoms?",
            "How to check blood pressure?"
        ]
        
        for question in common_questions:
            if st.button(question, key=f"q_{hash(question)}"):
                st.session_state.messages.append({"role": "user", "content": question})
                st.rerun()
        
        st.markdown("---")
        
        # Emergency contacts
        st.subheader("ЁЯЪи Emergency")
        st.error("""
        **Emergency Numbers:**
        - Bangladesh: 999
        - India: 102
        - Always call emergency services for urgent medical situations
        """)
        
        st.markdown("---")
        
        # Model info
        st.subheader("Model Information")
        st.info("""
        **Model**: BengaliMed v0.1.0
        **Languages**: Bengali, English
        **Specializations**: General, Mental Health, Pediatrics, Women's Health
        """)


def generate_response(prompt: str, language: str, specialization: str, cultural_mode: bool) -> str:
    """
    Generate chatbot response (placeholder implementation).
    
    Args:
        prompt: User input
        language: Selected language
        specialization: Medical specialization
        cultural_mode: Whether cultural sensitivity is enabled
        
    Returns:
        Generated response
    """
    # TODO: Replace with actual model inference
    
    # Simple rule-based responses for demo
    prompt_lower = prompt.lower()
    
    # Bengali responses
    if any(word in prompt_lower for word in ['ржЬрзНржмрж░', 'fever']):
        if language.startswith("Bengali"):
            return """
ржЬрзНржмрж░рзЗрж░ ржЬржирзНржп:
- ржкрж░рзНржпрж╛ржкрзНржд ржмрж┐рж╢рзНрж░рж╛ржо ржирж┐ржи
- ржкрзНрж░ржЪрзБрж░ ржкрж╛ржирж┐ ржкрж╛ржи ржХрж░рзБржи  
- ржкрзНржпрж╛рж░рж╛рж╕рж┐ржЯрж╛ржорж▓ рж╕рзЗржмржи ржХрж░рждрзЗ ржкрж╛рж░рзЗржи
- ржЬрзНржмрж░ рззрзжрзи┬░F ржПрж░ ржмрзЗрж╢рж┐ рж╣рж▓рзЗ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржкрж░рж╛ржорж░рзНрж╢ ржирж┐ржи

тЪая╕П ржПржЯрж┐ рж╢рзБржзрзБржорж╛рждрзНрж░ рж╕рж╛ржзрж╛рж░ржг ржкрж░рж╛ржорж░рзНрж╢ред ржЧрзБрж░рзБрждрж░ ржЕржмрж╕рзНржерж╛ржпрж╝ ржЕржмрж╢рзНржпржЗ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржХрж╛ржЫрзЗ ржпрж╛ржиред
            """
        else:
            return """
For fever:
- Take adequate rest
- Drink plenty of fluids
- You may take paracetamol
- Consult a doctor if fever exceeds 102┬░F

тЪая╕П This is general advice only. Please consult a healthcare professional for serious conditions.
            """
    
    elif any(word in prompt_lower for word in ['ржорж╛ржерж╛ржмрзНржпржерж╛', 'headache']):
        if language.startswith("Bengali"):
            return """
ржорж╛ржерж╛ржмрзНржпржерж╛рж░ ржЬржирзНржп:
- ржЕржирзНржзржХрж╛рж░ ржУ рж╢рж╛ржирзНржд ржкрж░рж┐ржмрзЗрж╢рзЗ ржмрж┐рж╢рзНрж░рж╛ржо ржирж┐ржи
- ржХржкрж╛рж▓рзЗ ржарж╛ржирзНржбрж╛ рж╕рзЗржХ ржжрж┐ржи
- ржкрж░рзНржпрж╛ржкрзНржд ржкрж╛ржирж┐ ржкрж╛ржи ржХрж░рзБржи
- ржкрзНрж░ржпрж╝рзЛржЬржирзЗ ржмрзНржпржерж╛ржирж╛рж╢ржХ рж╕рзЗржмржи ржХрж░рзБржи

ржпржжрж┐ ржорж╛ржерж╛ржмрзНржпржерж╛ рждрзАржмрзНрж░ рж╣ржпрж╝ ржмрж╛ ржШржи ржШржи рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржкрж░рж╛ржорж░рзНрж╢ ржирж┐ржиред
            """
        else:
            return """
For headache:
- Rest in a dark, quiet environment
- Apply cold compress to forehead
- Stay hydrated
- Take pain relievers if needed

If headache is severe or frequent, please consult a doctor.
            """
    
    elif any(word in prompt_lower for word in ['ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕', 'diabetes']):
        if language.startswith("Bengali"):
            return """
ржбрж╛ржпрж╝рж╛ржмрзЗржЯрж┐рж╕рзЗрж░ рж▓ржХрзНрж╖ржг:
- ржЕрждрж┐рж░рж┐ржХрзНржд рждрзГрж╖рзНржгрж╛
- ржШржи ржШржи ржкрзНрж░рж╕рзНрж░рж╛ржм
- ржЕрждрж┐рж░рж┐ржХрзНржд ржХрзНрж╖рзБржзрж╛
- ржжрзБрж░рзНржмрж▓рждрж╛ ржУ ржХрзНрж▓рж╛ржирзНрждрж┐
- ржУржЬржи ржХржорзЗ ржпрж╛ржУржпрж╝рж╛
- ржХрзНрж╖ржд рж╢рзБржХрж╛рждрзЗ ржжрзЗрж░рж┐

ржПржЗ рж▓ржХрзНрж╖ржгржЧрзБрж▓рзЛ ржжрзЗржЦрж╛ ржжрж┐рж▓рзЗ рж░ржХрзНрждрзЗ рж╕рзБржЧрж╛рж░рзЗрж░ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ржи ржПржмржВ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржкрж░рж╛ржорж░рзНрж╢ ржирж┐ржиред
            """
        else:
            return """
Diabetes symptoms:
- Excessive thirst
- Frequent urination
- Increased hunger
- Fatigue and weakness
- Unexplained weight loss
- Slow healing wounds

If you experience these symptoms, get your blood sugar tested and consult a doctor.
            """
    
    else:
        # Default response
        if language.startswith("Bengali"):
            return f"""
ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржиржЯрж┐ ржЖржорж┐ ржмрзБржЭрждрзЗ ржкрзЗрж░рзЗржЫрж┐ред рждржмрзЗ ржПржЗ ржмрж┐рж╖ржпрж╝рзЗ рж╕ржарж┐ржХ ржкрж░рж╛ржорж░рзНрж╢рзЗрж░ ржЬржирзНржп ржПржХржЬржи ржпрзЛржЧрзНржп ржЪрж┐ржХрж┐рзОрж╕ржХрзЗрж░ рж╕рж╛ржерзЗ ржкрж░рж╛ржорж░рзНрж╢ ржХрж░рж╛ ржЙрждрзНрждржоред

ржмрж┐рж╢рзЗрж╖рждрзНржм: {specialization}

тЪая╕П ржоржирзЗ рж░рж╛ржЦржмрзЗржи, ржПржЯрж┐ ржПржХржЯрж┐ ржЧржмрзЗрж╖ржгрж╛ ржкрзНрж░ржХрж▓рзНржкред ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рж╕рзНржмрж╛рж╕рзНржерзНржп ржмрж┐рж╖ржпрж╝рзЗ рж╕рж░рзНржмржжрж╛ ржкрзЗрж╢рж╛ржжрж╛рж░ ржЪрж┐ржХрж┐рзОрж╕ржХрзЗрж░ ржкрж░рж╛ржорж░рзНрж╢ ржирж┐ржиред
            """
        else:
            return f"""
I understand your question. However, for proper advice on this matter, it's best to consult with a qualified healthcare professional.

Specialization: {specialization}

тЪая╕П Remember, this is a research project. Always seek professional medical advice for important health matters.
            """


if __name__ == "__main__":
    main()
